theory TrivialFirst
begin

builtins: asymmetric-encryption

rule Register_PK:
    [ Fr(~ltk) ]
    -->
    [ !Ltk($A, ~ltk), !Pk($A, pk(~ltk)) ]

rule Get_PK:
    [ !Pk(A, pk) ]
    -->
    [ Out(pk) ]

rule Reveal_Ltk:
    [!Ltk(P, ltk)]
    --[ LtkReveal(P) ]->
    [Out(ltk)]


rule Alice:
    let m = aenc(~k, pkB) in
    [
        Fr(~k),
        !Pk($B, pkB)
    ]
    --[Alice_sent($A, m)]->
    [
        Alice_sent($A, m), 
        Out(m),
        Secret($A, ~k)
    ]

rule Bob:
    let m = aenc(k, pkB) in
    [
        In(m),
        Alice_sent($A, m) 
    ]
    --[Bob_received($B, k)]->
    [
        Secret($B, k)
    ]

rule Secrecy_claim:
    [Secret(S, k)] --[SecretClaim(S, k)]-> []


lemma functional: 
    exists-trace
    "Ex A B m #i #j. Alice_sent(A, m) @ i & 
            Bob_received(B, m) @ j & i < j"

lemma secrecy:
    "not (
        Ex A k #i #j. Bob_received(A, k) @ i & K(k) @ j 
        & not (Ex #r. LtkReveal(A) @ r)
    )"

end
